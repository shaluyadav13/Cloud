#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DbLinq.Vendor;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using DbLinq;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using DbLinq.Data.Linq;
using DbLinq.Data.Linq.Mapping;
using System.Data.Linq.Mapping;
using MySql.Data.MySqlClient;
using System.Configuration;
using System.Data;



public partial class DBDataContext : DataContext
{

    private static DbLinq.Data.Linq.Mapping.AttributeMappingSource mappingSource = new DbLinq.Data.Linq.Mapping.AttributeMappingSource();

    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertApplicationError(ApplicationError instance);
    partial void UpdateApplicationError(ApplicationError instance);
    partial void DeleteApplicationError(ApplicationError instance);
    partial void InsertAuthorizedStudent(AuthorizedStudent instance);
    partial void UpdateAuthorizedStudent(AuthorizedStudent instance);
    partial void DeleteAuthorizedStudent(AuthorizedStudent instance);
    partial void InsertStudentGroup(StudentGroup instance);
    partial void UpdateStudentGroup(StudentGroup instance);
    partial void DeleteStudentGroup(StudentGroup instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);

    partial void InsertAudio(Audio instance);
    partial void UpdateAudio(Audio instance);
    partial void DeleteAudio(Audio instance);

    partial void InsertWebsites(Websites instance);
    partial void UpdateWebsites(Websites instance);
    partial void DeleteWebsites(Websites instance);

    partial void InsertFiles(Files instance);
    partial void UpdateFiles(Files instance);
    partial void DeleteFiles(Files instance);

    partial void InsertImages(Images instance);
    partial void UpdateImages(Images instance);
    partial void DeleteImages(Images instance);

    partial void InsertUpload(Upload instance);
    partial void UpdateUpload(Upload instance);
    partial void DeleteUpload(Upload instance);
    partial void InsertAppLogItem(AppLogItem instance);
    partial void UpdateAppLogItem(AppLogItem instance);
    partial void DeleteAppLogItem(AppLogItem instance);

    partial void InsertUserAgreement(UserAgreement instance);
    partial void UpdateUserAgreement(UserAgreement instance);
    partial void DeleteUserAgreement(UserAgreement instance);
    #endregion

    public DBDataContext()
        : base(new MySqlConnection(ConfigurationManager.ConnectionStrings["nwcloudEntities"].ConnectionString), new DbLinq.MySql.MySqlVendor())
    {
    }

    public DBDataContext(IDbConnection connection, IVendor vendor)
        : base(connection, vendor)
    {
    }

    //public DBDataContext()
    //    : base(new MySqlConnection(ConfigurationManager.ConnectionStrings["nwcloudEntities"].ConnectionString))
    //{
    //    OnCreated();
    //}

    

    public DBDataContext(string connection)
        : base(connection)
    {
        //OnCreated();
    }




    public DBDataContext(string connection, DbLinq.Data.Linq.Mapping.AttributeMappingSource mappingSource) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public DBDataContext(System.Data.IDbConnection connection, DbLinq.Data.Linq.Mapping.AttributeMappingSource mappingSource) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public Table<Admin> Admins
    {
        get
        {
            return this.GetTable<Admin>();
        }
    }

    public Table<ApplicationError> ApplicationErrors
    {
        get
        {
            return this.GetTable<ApplicationError>();
        }
    }

    public Table<AuthorizedStudent> AuthorizedStudents
    {
        get
        {
            return this.GetTable<AuthorizedStudent>();
        }
    }

    public Table<StudentGroup> StudentGroups
    {
        get
        {
            return this.GetTable<StudentGroup>();
        }
    }

    public Table<Video> Videos
    {
        get
        {
            return this.GetTable<Video>();
        }
    }
    public Table<Audio> Audios
    {
        get
        {
            return this.GetTable<Audio>();
        }
    }
    public Table<Websites> Websites
    {
        get
        {
            return this.GetTable<Websites>();
        }
    }
    public Table<Files> Files
    {
        get
        {
            return this.GetTable<Files>();
        }
    }
    public Table<Images> Images
    {
        get
        {
            return this.GetTable<Images>();
        }
    }
    public Table<Upload> Uploads
    {
        get
        {
            return this.GetTable<Upload>();
        }
    }

    public Table<AppLogItem> AppLogItems
    {
        get
        {
            return this.GetTable<AppLogItem>();
        }
    }
    public Table<UserAgreement> UserAgreements
    {
        get
        {
            return this.GetTable<UserAgreement>();
        }
    }
}

[Table(Name = "nwcloud.admin")]
public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _Username;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    #endregion

    public Admin()
    {
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.applicationerror")]
public partial class ApplicationError : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private int _ErrorID;

    private string _Type;

    private string _Message;

    private string _StackTrace;

    private string _Username;

    private System.DateTime _DateThrown;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIDChanging(int value);
    partial void OnErrorIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnDateThrownChanging(System.DateTime value);
    partial void OnDateThrownChanged();
    #endregion

    public ApplicationError()
    {
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ErrorID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
    public int ErrorID
    {
        get
        {
            return this._ErrorID;
        }
        set
        {
            if ((this._ErrorID != value))
            {
                this.OnErrorIDChanging(value);
                this.SendPropertyChanging();
                this._ErrorID = value;
                this.SendPropertyChanged("ErrorID");
                this.OnErrorIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
    public string Type
    {
        get
        {
            return this._Type;
        }
        set
        {
            if ((this._Type != value))
            {
                this.OnTypeChanging(value);
                this.SendPropertyChanging();
                this._Type = value;
                this.SendPropertyChanged("Type");
                this.OnTypeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Message", DbType = "VarChar(1000) NOT NULL", CanBeNull = false)]
    public string Message
    {
        get
        {
            return this._Message;
        }
        set
        {
            if ((this._Message != value))
            {
                this.OnMessageChanging(value);
                this.SendPropertyChanging();
                this._Message = value;
                this.SendPropertyChanged("Message");
                this.OnMessageChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StackTrace", DbType = "VarChar(8000) NOT NULL", CanBeNull = false)]
    public string StackTrace
    {
        get
        {
            return this._StackTrace;
        }
        set
        {
            if ((this._StackTrace != value))
            {
                this.OnStackTraceChanging(value);
                this.SendPropertyChanging();
                this._StackTrace = value;
                this.SendPropertyChanged("StackTrace");
                this.OnStackTraceChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateThrown", DbType = "DateTime NOT NULL")]
    public System.DateTime DateThrown
    {
        get
        {
            return this._DateThrown;
        }
        set
        {
            if ((this._DateThrown != value))
            {
                this.OnDateThrownChanging(value);
                this.SendPropertyChanging();
                this._DateThrown = value;
                this.SendPropertyChanged("DateThrown");
                this.OnDateThrownChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.authorizedstudent")]
public partial class AuthorizedStudent : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _Username;

    private int _GroupID;

    private EntityRef<StudentGroup> _StudentGroup;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    #endregion

    public AuthorizedStudent()
    {
        this._StudentGroup = default(EntityRef<StudentGroup>);
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
    public int GroupID
    {
        get
        {
            return this._GroupID;
        }
        set
        {
            if ((this._GroupID != value))
            {
                if (this._StudentGroup.HasLoadedOrAssignedValue)
                {
                    throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                }
                this.OnGroupIDChanging(value);
                this.SendPropertyChanging();
                this._GroupID = value;
                this.SendPropertyChanged("GroupID");
                this.OnGroupIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_AuthorizedStudent", Storage = "_StudentGroup", ThisKey = "GroupID", OtherKey = "GroupID", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
    public StudentGroup StudentGroup
    {
        get
        {
            return this._StudentGroup.Entity;
        }
        set
        {
            StudentGroup previousValue = this._StudentGroup.Entity;
            if (((previousValue != value)
                        || (this._StudentGroup.HasLoadedOrAssignedValue == false)))
            {
                this.SendPropertyChanging();
                if ((previousValue != null))
                {
                    this._StudentGroup.Entity = null;
                    previousValue.AuthorizedStudents.Remove(this);
                }
                this._StudentGroup.Entity = value;
                if ((value != null))
                {
                    value.AuthorizedStudents.Add(this);
                    this._GroupID = value.GroupID;
                }
                else
                {
                    this._GroupID = default(int);
                }
                this.SendPropertyChanged("StudentGroup");
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.studentgroup")]
public partial class StudentGroup : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private int _GroupID;

    private string _GroupName;

    private string _Description;

    private string _FacultyOwner;

    private System.DateTime _StartDate;

    private System.DateTime _EndDate;

    private bool _ShowGroup;

    private EntitySet<AuthorizedStudent> _AuthorizedStudents;

    private EntitySet<Video> _Videos;
    private EntitySet<Audio> _Audios;
    private EntitySet<Websites> _Websites;
    private EntitySet<Files> _Files;
    private EntitySet<Images> _Images;

    private EntitySet<Upload> _Uploads;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFacultyOwnerChanging(string value);
    partial void OnFacultyOwnerChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnShowGroupChanging(bool value);
    partial void OnShowGroupChanged();
    #endregion

    public StudentGroup()
    {
        this._AuthorizedStudents = new EntitySet<AuthorizedStudent>(new Action<AuthorizedStudent>(this.attach_AuthorizedStudents), new Action<AuthorizedStudent>(this.detach_AuthorizedStudents));
        this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
        this._Uploads = new EntitySet<Upload>(new Action<Upload>(this.attach_Uploads), new Action<Upload>(this.detach_Uploads));
        this._Audios = new EntitySet<Audio>(new Action<Audio>(this.attach_Audios), new Action<Audio>(this.detach_Audios));
        this._Websites = new EntitySet<Websites>(new Action<Websites>(this.attach_Websites), new Action<Websites>(this.detach_Websites));
        this._Files = new EntitySet<Files>(new Action<Files>(this.attach_Files), new Action<Files>(this.detach_Files));
        this._Images = new EntitySet<Images>(new Action<Images>(this.attach_Images), new Action<Images>(this.detach_Images));
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
    public int GroupID
    {
        get
        {
            return this._GroupID;
        }
        set
        {
            if ((this._GroupID != value))
            {
                this.OnGroupIDChanging(value);
                this.SendPropertyChanging();
                this._GroupID = value;
                this.SendPropertyChanged("GroupID");
                this.OnGroupIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupName", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
    public string GroupName
    {
        get
        {
            return this._GroupName;
        }
        set
        {
            if ((this._GroupName != value))
            {
                this.OnGroupNameChanging(value);
                this.SendPropertyChanging();
                this._GroupName = value;
                this.SendPropertyChanged("GroupName");
                this.OnGroupNameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(500) NOT NULL", CanBeNull = false)]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FacultyOwner", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string FacultyOwner
    {
        get
        {
            return this._FacultyOwner;
        }
        set
        {
            if ((this._FacultyOwner != value))
            {
                this.OnFacultyOwnerChanging(value);
                this.SendPropertyChanging();
                this._FacultyOwner = value;
                this.SendPropertyChanged("FacultyOwner");
                this.OnFacultyOwnerChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDate", DbType = "DateTime NOT NULL")]
    public System.DateTime StartDate
    {
        get
        {
            return this._StartDate;
        }
        set
        {
            if ((this._StartDate != value))
            {
                this.OnStartDateChanging(value);
                this.SendPropertyChanging();
                this._StartDate = value;
                this.SendPropertyChanged("StartDate");
                this.OnStartDateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDate", DbType = "DateTime NOT NULL")]
    public System.DateTime EndDate
    {
        get
        {
            return this._EndDate;
        }
        set
        {
            if ((this._EndDate != value))
            {
                this.OnEndDateChanging(value);
                this.SendPropertyChanging();
                this._EndDate = value;
                this.SendPropertyChanged("EndDate");
                this.OnEndDateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowGroup")]
    public bool ShowGroup
    {
        get
        {
            return this._ShowGroup;
        }
        set
        {
            if ((this._ShowGroup != value))
            {
                this.OnShowGroupChanging(value);
                this.SendPropertyChanging();
                this._ShowGroup = value;
                this.SendPropertyChanged("ShowGroup");
                this.OnShowGroupChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_AuthorizedStudent", Storage = "_AuthorizedStudents", ThisKey = "GroupID", OtherKey = "GroupID")]
    public EntitySet<AuthorizedStudent> AuthorizedStudents
    {
        get
        {
            return this._AuthorizedStudents;
        }
        set
        {
            this._AuthorizedStudents.Assign(value);
        }
    }

    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Video", Storage = "_Videos", ThisKey = "GroupID", OtherKey = "GroupID")]
    public EntitySet<Video> Videos
    {
        get
        {
            return this._Videos;
        }
        set
        {
            this._Videos.Assign(value);
        }
    }

    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Audio", Storage = "_Audios", ThisKey = "GroupID", OtherKey = "GroupID")]
    public EntitySet<Audio> Audios
    {
        get
        {
            return this._Audios;
        }
        set
        {
            this._Audios.Assign(value);
        }
    }
    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Websites", Storage = "_Websites", ThisKey = "GroupID", OtherKey = "GroupID")]
    public EntitySet<Websites> Websites
    {
        get
        {
            return this._Websites;
        }
        set
        {
            this._Websites.Assign(value);
        }
    }
    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Files", Storage = "_Files", ThisKey = "GroupID", OtherKey = "GroupID")]
    public EntitySet<Files> Files
    {
        get
        {
            return this._Files;
        }
        set
        {
            this._Files.Assign(value);
        }
    }
    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Images", Storage = "_Images", ThisKey = "GroupID", OtherKey = "GroupID")]
    public EntitySet<Images> Images
    {
        get
        {
            return this._Images;
        }
        set
        {
            this._Images.Assign(value);
        }
    }
    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Upload", Storage = "_Uploads", ThisKey = "GroupID", OtherKey = "GroupID")]
    public EntitySet<Upload> Uploads
    {
        get
        {
            return this._Uploads;
        }
        set
        {
            this._Uploads.Assign(value);
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    private void attach_AuthorizedStudents(AuthorizedStudent entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = this;
    }

    private void detach_AuthorizedStudents(AuthorizedStudent entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = null;
    }

    private void attach_Videos(Video entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = this;
    }

    private void detach_Videos(Video entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = null;
    }
    private void attach_Audios(Audio entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = this;
    }

    private void detach_Audios(Audio entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = null;
    }
    private void attach_Uploads(Upload entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = this;
    }

    private void detach_Uploads(Upload entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = null;
    }
    private void attach_Websites(Websites entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = this;
    }

    private void detach_Websites(Websites entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = null;
    }
    private void attach_Files(Files entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = this;
    }

    private void detach_Files(Files entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = null;
    }
    private void attach_Images(Images entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = this;
    }

    private void detach_Images(Images entity)
    {
        this.SendPropertyChanging();
        entity.StudentGroup = null;
    }
}

[Table(Name = "nwcloud.video")]
public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _VideoID;

    private string _Title;

    private string _Description;

    private System.DateTime _DatePosted;

    private System.Data.Linq.Binary _ThumbnailBytes;

    private string _Username;

    private long _Size;

    private int _Views;

    private System.Nullable<System.DateTime> _LastView;

    private System.Nullable<System.DateTime> _AutoDeleteDate;

    private string _Author;

    private System.Nullable<int> _GroupID;

    private string _UploadedBy;

    private bool _ShowStatus;



    private bool _Transcript;

    private EntityRef<StudentGroup> _StudentGroup;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoIDChanging(string value);
    partial void OnVideoIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    partial void OnThumbnailBytesChanging(System.Data.Linq.Binary value);
    partial void OnThumbnailBytesChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSizeChanging(long value);
    partial void OnSizeChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnLastViewChanging(System.Nullable<System.DateTime> value);
    partial void OnLastViewChanged();
    partial void OnAutoDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAutoDeleteDateChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnUploadedByChanging(string value);
    partial void OnUploadedByChanged();
    partial void OnShowStatusChanging(bool value);
    partial void OnShowStatusChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnTranscriptChanging(bool value);
    partial void OnTranscriptChanged();
    #endregion

    public Video()
    {
        this._StudentGroup = default(EntityRef<StudentGroup>);
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VideoID", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string VideoID
    {
        get
        {
            return this._VideoID;
        }
        set
        {
            if ((this._VideoID != value))
            {
                this.OnVideoIDChanging(value);
                this.SendPropertyChanging();
                this._VideoID = value;
                this.SendPropertyChanged("VideoID");
                this.OnVideoIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string Title
    {
        get
        {
            return this._Title;
        }
        set
        {
            if ((this._Title != value))
            {
                this.OnTitleChanging(value);
                this.SendPropertyChanging();
                this._Title = value;
                this.SendPropertyChanged("Title");
                this.OnTitleChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(1000) NOT NULL", CanBeNull = false)]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DatePosted", DbType = "DateTime NOT NULL")]
    public System.DateTime DatePosted
    {
        get
        {
            return this._DatePosted;
        }
        set
        {
            if ((this._DatePosted != value))
            {
                this.OnDatePostedChanging(value);
                this.SendPropertyChanging();
                this._DatePosted = value;
                this.SendPropertyChanged("DatePosted");
                this.OnDatePostedChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ThumbnailBytes", DbType = "Image NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
    public System.Data.Linq.Binary ThumbnailBytes
    {
        get
        {
            return this._ThumbnailBytes;
        }
        set
        {
            if ((this._ThumbnailBytes != value))
            {
                this.OnThumbnailBytesChanging(value);
                this.SendPropertyChanging();
                this._ThumbnailBytes = value;
                this.SendPropertyChanged("ThumbnailBytes");
                this.OnThumbnailBytesChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Size", DbType = "BigInt NOT NULL")]
    public long Size
    {
        get
        {
            return this._Size;
        }
        set
        {
            if ((this._Size != value))
            {
                this.OnSizeChanging(value);
                this.SendPropertyChanging();
                this._Size = value;
                this.SendPropertyChanged("Size");
                this.OnSizeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Views", DbType = "Int NOT NULL")]
    public int Views
    {
        get
        {
            return this._Views;
        }
        set
        {
            if ((this._Views != value))
            {
                this.OnViewsChanging(value);
                this.SendPropertyChanging();
                this._Views = value;
                this.SendPropertyChanged("Views");
                this.OnViewsChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastView", DbType = "DateTime")]
    public System.Nullable<System.DateTime> LastView
    {
        get
        {
            return this._LastView;
        }
        set
        {
            if ((this._LastView != value))
            {
                this.OnLastViewChanging(value);
                this.SendPropertyChanging();
                this._LastView = value;
                this.SendPropertyChanged("LastView");
                this.OnLastViewChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoDeleteDate", DbType = "DateTime")]
    public System.Nullable<System.DateTime> AutoDeleteDate
    {
        get
        {
            return this._AutoDeleteDate;
        }
        set
        {
            if ((this._AutoDeleteDate != value))
            {
                this.OnAutoDeleteDateChanging(value);
                this.SendPropertyChanging();
                this._AutoDeleteDate = value;
                this.SendPropertyChanged("AutoDeleteDate");
                this.OnAutoDeleteDateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Author", DbType = "VarChar(100)")]
    public string Author
    {
        get
        {
            return this._Author;
        }
        set
        {
            if ((this._Author != value))
            {
                this.OnAuthorChanging(value);
                this.SendPropertyChanging();
                this._Author = value;
                this.SendPropertyChanged("Author");
                this.OnAuthorChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupID", DbType = "Int")]
    public System.Nullable<int> GroupID
    {
        get
        {
            return this._GroupID;
        }
        set
        {
            if ((this._GroupID != value))
            {
                if (this._StudentGroup.HasLoadedOrAssignedValue)
                {
                    throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                }
                this.OnGroupIDChanging(value);
                this.SendPropertyChanging();
                this._GroupID = value;
                this.SendPropertyChanged("GroupID");
                this.OnGroupIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UploadedBy", AutoSync = AutoSync.Always, CanBeNull = false)]
    public string UploadedBy
    {
        get
        {
            return this._UploadedBy;
        }
        set
        {
            if ((this._UploadedBy != value))
            {
                this.OnUploadedByChanging(value);
                this.SendPropertyChanging();
                this._UploadedBy = value;
                this.SendPropertyChanged("UploadedBy");
                this.OnUploadedByChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowStatus")]
    public bool ShowStatus
    {
        get
        {
            return this._ShowStatus;
        }
        set
        {
            if ((this._ShowStatus != value))
            {
                this.OnShowStatusChanging(value);
                this.SendPropertyChanging();
                this._ShowStatus = value;
                this.SendPropertyChanged("ShowStatus");
                this.OnShowStatusChanged();
            }
        }
    }



    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Transcript")]
    public bool Transcript
    {
        get
        {
            return this._Transcript;
        }
        set
        {
            if ((this._Transcript != value))
            {
                this.OnTranscriptChanging(value);
                this.SendPropertyChanging();
                this._Transcript = value;
                this.SendPropertyChanged("Transcript");
                this.OnTranscriptChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Video", Storage = "_StudentGroup", ThisKey = "GroupID", OtherKey = "GroupID", IsForeignKey = true, DeleteRule = "SET NULL")]
    public StudentGroup StudentGroup
    {
        get
        {
            return this._StudentGroup.Entity;
        }
        set
        {
            StudentGroup previousValue = this._StudentGroup.Entity;
            if (((previousValue != value)
                        || (this._StudentGroup.HasLoadedOrAssignedValue == false)))
            {
                this.SendPropertyChanging();
                if ((previousValue != null))
                {
                    this._StudentGroup.Entity = null;
                    previousValue.Videos.Remove(this);
                }
                this._StudentGroup.Entity = value;
                if ((value != null))
                {
                    value.Videos.Add(this);
                    this._GroupID = value.GroupID;
                }
                else
                {
                    this._GroupID = default(Nullable<int>);
                }
                this.SendPropertyChanged("StudentGroup");
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.upload")]
public partial class Upload : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _VideoID;

    private string _Title;

    private string _Description;

    private System.DateTime _DateUploaded;

    private string _Username;

    private long _Size;

    private string _RawFileName;

    private System.Nullable<System.DateTime> _AutoDeleteDate;

    private string _Author;

    private System.Nullable<int> _GroupID;

    private System.Nullable<int> _Video;

    private System.Nullable<int> _Audio;

    private System.Nullable<int> _Images;



    private bool _Transcript;

    private EntityRef<StudentGroup> _StudentGroup;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoIDChanging(string value);
    partial void OnVideoIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateUploadedChanging(System.DateTime value);
    partial void OnDateUploadedChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSizeChanging(long value);
    partial void OnSizeChanged();
    partial void OnRawFileNameChanging(string value);
    partial void OnRawFileNameChanged();
    partial void OnAutoDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAutoDeleteDateChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();

    partial void OnVideoChanging(System.Nullable<int> value);
    partial void OnVideoChanged();

    partial void OnAudioChanging(System.Nullable<int> value);
    partial void OnAudioChanged();

    partial void OnImagesChanging(System.Nullable<int> value);
    partial void OnImagesChanged();

    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnTranscriptChanging(bool value);
    partial void OnTranscriptChanged();
    #endregion

    public Upload()
    {
        this._StudentGroup = default(EntityRef<StudentGroup>);
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VideoID", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string VideoID
    {
        get
        {
            return this._VideoID;
        }
        set
        {
            if ((this._VideoID != value))
            {
                this.OnVideoIDChanging(value);
                this.SendPropertyChanging();
                this._VideoID = value;
                this.SendPropertyChanged("VideoID");
                this.OnVideoIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string Title
    {
        get
        {
            return this._Title;
        }
        set
        {
            if ((this._Title != value))
            {
                this.OnTitleChanging(value);
                this.SendPropertyChanging();
                this._Title = value;
                this.SendPropertyChanged("Title");
                this.OnTitleChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(1250) NOT NULL", CanBeNull = false)]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateUploaded", DbType = "DateTime NOT NULL")]
    public System.DateTime DateUploaded
    {
        get
        {
            return this._DateUploaded;
        }
        set
        {
            if ((this._DateUploaded != value))
            {
                this.OnDateUploadedChanging(value);
                this.SendPropertyChanging();
                this._DateUploaded = value;
                this.SendPropertyChanged("DateUploaded");
                this.OnDateUploadedChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Size", DbType = "BigInt NOT NULL")]
    public long Size
    {
        get
        {
            return this._Size;
        }
        set
        {
            if ((this._Size != value))
            {
                this.OnSizeChanging(value);
                this.SendPropertyChanging();
                this._Size = value;
                this.SendPropertyChanged("Size");
                this.OnSizeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RawFileName", DbType = "VarChar(2000) NOT NULL", CanBeNull = false)]
    public string RawFileName
    {
        get
        {
            return this._RawFileName;
        }
        set
        {
            if ((this._RawFileName != value))
            {
                this.OnRawFileNameChanging(value);
                this.SendPropertyChanging();
                this._RawFileName = value;
                this.SendPropertyChanged("RawFileName");
                this.OnRawFileNameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoDeleteDate", DbType = "DateTime")]
    public System.Nullable<System.DateTime> AutoDeleteDate
    {
        get
        {
            return this._AutoDeleteDate;
        }
        set
        {
            if ((this._AutoDeleteDate != value))
            {
                this.OnAutoDeleteDateChanging(value);
                this.SendPropertyChanging();
                this._AutoDeleteDate = value;
                this.SendPropertyChanged("AutoDeleteDate");
                this.OnAutoDeleteDateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Author", DbType = "VarChar(100)")]
    public string Author
    {
        get
        {
            return this._Author;
        }
        set
        {
            if ((this._Author != value))
            {
                this.OnAuthorChanging(value);
                this.SendPropertyChanging();
                this._Author = value;
                this.SendPropertyChanged("Author");
                this.OnAuthorChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupID", DbType = "Int")]
    public System.Nullable<int> GroupID
    {
        get
        {
            return this._GroupID;
        }
        set
        {
            if ((this._GroupID != value))
            {
                if (this._StudentGroup.HasLoadedOrAssignedValue)
                {
                    throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                }
                this.OnGroupIDChanging(value);
                this.SendPropertyChanging();
                this._GroupID = value;
                this.SendPropertyChanged("GroupID");
                this.OnGroupIDChanged();
            }
        }
    }
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Video", DbType = "Int")]
    public System.Nullable<int> Video
    {
        get
        {
            return this._Video;
        }
        set
        {
            if ((this._Video != value))
            {
                this.OnVideoChanging(value);
                this.SendPropertyChanging();
                this._Video = value;
                this.SendPropertyChanged("Video");
                this.OnVideoChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Audio", DbType = "Int")]
    public System.Nullable<int> Audio
    {
        get
        {
            return this._Audio;
        }
        set
        {
            if ((this._Audio != value))
            {
                this.OnAudioChanging(value);
                this.SendPropertyChanging();
                this._Audio = value;
                this.SendPropertyChanged("Audio");
                this.OnAudioChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Images", DbType = "Int")]
    public System.Nullable<int> Images
    {
        get
        {
            return this._Images;
        }
        set
        {
            if ((this._Images != value))
            {
                this.OnImagesChanging(value);
                this.SendPropertyChanging();
                this._Images = value;
                this.SendPropertyChanged("Images");
                this.OnImagesChanged();
            }
        }
    }



    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Transcript")]
    public bool Transcript
    {
        get
        {
            return this._Transcript;
        }
        set
        {
            if ((this._Transcript != value))
            {
                this.OnTranscriptChanging(value);
                this.SendPropertyChanging();
                this._Transcript = value;
                this.SendPropertyChanged("Transcript");
                this.OnTranscriptChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Upload", Storage = "_StudentGroup", ThisKey = "GroupID", OtherKey = "GroupID", IsForeignKey = true)]
    public StudentGroup StudentGroup
    {
        get
        {
            return this._StudentGroup.Entity;
        }
        set
        {
            StudentGroup previousValue = this._StudentGroup.Entity;
            if (((previousValue != value)
                        || (this._StudentGroup.HasLoadedOrAssignedValue == false)))
            {
                this.SendPropertyChanging();
                if ((previousValue != null))
                {
                    this._StudentGroup.Entity = null;
                    previousValue.Uploads.Remove(this);
                }
                this._StudentGroup.Entity = value;
                if ((value != null))
                {
                    value.Uploads.Add(this);
                    this._GroupID = value.GroupID;
                }
                else
                {
                    this._GroupID = default(Nullable<int>);
                }
                this.SendPropertyChanged("StudentGroup");
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.applogitem")]
public partial class AppLogItem : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private int _AppLogItemID = 0;

    private System.DateTime _Time;

    private string _Username;

    private string _LastName;

    private string _FirstName;

    private string _AccountType;

    private string _Message;

    private string _VideoID;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppLogItemIDChanging(int value);
    partial void OnAppLogItemIDChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnVideoIDChanging(string value);
    partial void OnVideoIDChanged();
    #endregion

    public AppLogItem()
    {
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AppLogItemID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
    public int AppLogItemID
    {
        get
        {
            return this._AppLogItemID;
        }
        set
        {
            if ((this._AppLogItemID != value))
            {
                this.OnAppLogItemIDChanging(value);
                this.SendPropertyChanging();
                this._AppLogItemID = value;
                this.SendPropertyChanged("AppLogItemID");
                this.OnAppLogItemIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Time", DbType = "DateTime NOT NULL")]
    public System.DateTime Time
    {
        get
        {
            return this._Time;
        }
        set
        {
            if ((this._Time != value))
            {
                this.OnTimeChanging(value);
                this.SendPropertyChanging();
                this._Time = value;
                this.SendPropertyChanged("Time");
                this.OnTimeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastName", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string LastName
    {
        get
        {
            return this._LastName;
        }
        set
        {
            if ((this._LastName != value))
            {
                this.OnLastNameChanging(value);
                this.SendPropertyChanging();
                this._LastName = value;
                this.SendPropertyChanged("LastName");
                this.OnLastNameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstName", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string FirstName
    {
        get
        {
            return this._FirstName;
        }
        set
        {
            if ((this._FirstName != value))
            {
                this.OnFirstNameChanging(value);
                this.SendPropertyChanging();
                this._FirstName = value;
                this.SendPropertyChanged("FirstName");
                this.OnFirstNameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountType", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string AccountType
    {
        get
        {
            return this._AccountType;
        }
        set
        {
            if ((this._AccountType != value))
            {
                this.OnAccountTypeChanging(value);
                this.SendPropertyChanging();
                this._AccountType = value;
                this.SendPropertyChanged("AccountType");
                this.OnAccountTypeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Message", DbType = "VarChar(1000) NOT NULL", CanBeNull = false)]
    public string Message
    {
        get
        {
            return this._Message;
        }
        set
        {
            if ((this._Message != value))
            {
                this.OnMessageChanging(value);
                this.SendPropertyChanging();
                this._Message = value;
                this.SendPropertyChanged("Message");
                this.OnMessageChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VideoID", DbType = "VARCHAR(50) NOT NULL", CanBeNull = false)]
    public string VideoID
    {
        get
        {
            return this._VideoID;
        }
        set
        {
            if ((this._VideoID != value))
            {
                this.OnVideoIDChanging(value);
                this.SendPropertyChanging();
                this._VideoID = value;
                this.SendPropertyChanged("VideoID");
                this.OnVideoIDChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.audio")]
public partial class Audio : INotifyPropertyChanging, INotifyPropertyChanged
{
    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
    private string _AudioID;

    private string _Title;

    private string _Description;

    private System.DateTime _DatePosted;

    private string _Username;

    private long _Size;

    private int _NumOfHits;

    private System.Nullable<System.DateTime> _LastHit;

    private System.Nullable<System.DateTime> _AutoDeleteDate;

    private string _Author;
    private bool _ShareStatus;



    private bool _Transcript;
    private System.Nullable<int> _GroupID;
    private EntityRef<StudentGroup> _StudentGroup;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAudioIDChanging(string value);
    partial void OnAudioIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSizeChanging(long value);
    partial void OnSizeChanged();
    partial void OnNumOfHitsChanging(int value);
    partial void OnNumOfHitsChanged();
    partial void OnLastHitChanging(System.Nullable<System.DateTime> value);
    partial void OnLastHitChanged();
    partial void OnAutoDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAutoDeleteDateChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    //partial void OnUploadedByChanging(string value);
    //partial void OnUploadedByChanged();
    partial void OnShowStatusChanging(bool value);
    partial void OnShowStatusChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnTranscriptChanging(bool value);
    partial void OnTranscriptChanged();
    #endregion
    public Audio()
    {
        this._StudentGroup = default(EntityRef<StudentGroup>);
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AudioID", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string AudioID
    {
        get
        {
            return this._AudioID;
        }
        set
        {
            if ((this._AudioID != value))
            {
                this.OnAudioIDChanging(value);
                this.SendPropertyChanging();
                this._AudioID = value;
                this.SendPropertyChanged("VideoID");
                this.OnAudioIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string Title
    {
        get
        {
            return this._Title;
        }
        set
        {
            if ((this._Title != value))
            {
                this.OnTitleChanging(value);
                this.SendPropertyChanging();
                this._Title = value;
                this.SendPropertyChanged("Title");
                this.OnTitleChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(1000) NOT NULL", CanBeNull = false)]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DatePosted", DbType = "DateTime NOT NULL")]
    public System.DateTime DatePosted
    {
        get
        {
            return this._DatePosted;
        }
        set
        {
            if ((this._DatePosted != value))
            {
                this.OnDatePostedChanging(value);
                this.SendPropertyChanging();
                this._DatePosted = value;
                this.SendPropertyChanged("DatePosted");
                this.OnDatePostedChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Size", DbType = "BigInt NOT NULL")]
    public long Size
    {
        get
        {
            return this._Size;
        }
        set
        {
            if ((this._Size != value))
            {
                this.OnSizeChanging(value);
                this.SendPropertyChanging();
                this._Size = value;
                this.SendPropertyChanged("Size");
                this.OnSizeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NumOfHits", DbType = "Int NOT NULL")]
    public int NumOfHits
    {
        get
        {
            return this._NumOfHits;
        }
        set
        {
            if ((this._NumOfHits != value))
            {
                this.OnNumOfHitsChanging(value);
                this.SendPropertyChanging();
                this._NumOfHits = value;
                this.SendPropertyChanged("NumOfHits");
                this.OnNumOfHitsChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastHit", DbType = "DateTime")]
    public System.Nullable<System.DateTime> LastHit
    {
        get
        {
            return this._LastHit;
        }
        set
        {
            if ((this._LastHit != value))
            {
                this.OnLastHitChanging(value);
                this.SendPropertyChanging();
                this._LastHit = value;
                this.SendPropertyChanged("LastHit");
                this.OnLastHitChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoDeleteDate", DbType = "DateTime")]
    public System.Nullable<System.DateTime> AutoDeleteDate
    {
        get
        {
            return this._AutoDeleteDate;
        }
        set
        {
            if ((this._AutoDeleteDate != value))
            {
                this.OnAutoDeleteDateChanging(value);
                this.SendPropertyChanging();
                this._AutoDeleteDate = value;
                this.SendPropertyChanged("AutoDeleteDate");
                this.OnAutoDeleteDateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Author", DbType = "VarChar(100)")]
    public string Author
    {
        get
        {
            return this._Author;
        }
        set
        {
            if ((this._Author != value))
            {
                this.OnAuthorChanging(value);
                this.SendPropertyChanging();
                this._Author = value;
                this.SendPropertyChanged("Author");
                this.OnAuthorChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupID", DbType = "Int")]
    public System.Nullable<int> GroupID
    {
        get
        {
            return this._GroupID;
        }
        set
        {
            if ((this._GroupID != value))
            {
                if (this._StudentGroup.HasLoadedOrAssignedValue)
                {
                    throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                }
                this.OnGroupIDChanging(value);
                this.SendPropertyChanging();
                this._GroupID = value;
                this.SendPropertyChanged("GroupID");
                this.OnGroupIDChanged();
            }
        }
    }
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShareStatus")]
    public bool ShareStatus
    {
        get
        {
            return this._ShareStatus;
        }
        set
        {
            if ((this._ShareStatus != value))
            {
                this.OnShowStatusChanging(value);
                this.SendPropertyChanging();
                this._ShareStatus = value;
                this.SendPropertyChanged("ShareStatus");
                this.OnShowStatusChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Transcript")]
    public bool Transcript
    {
        get
        {
            return this._Transcript;
        }
        set
        {
            if ((this._Transcript != value))
            {
                this.OnTranscriptChanging(value);
                this.SendPropertyChanging();
                this._Transcript = value;
                this.SendPropertyChanged("Transcript");
                this.OnTranscriptChanged();
            }
        }
    }
    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Audio", Storage = "_StudentGroup", ThisKey = "GroupID", OtherKey = "GroupID", IsForeignKey = true, DeleteRule = "SET NULL")]
    public StudentGroup StudentGroup
    {
        get
        {
            return this._StudentGroup.Entity;
        }
        set
        {
            StudentGroup previousValue = this._StudentGroup.Entity;
            if (((previousValue != value)
                        || (this._StudentGroup.HasLoadedOrAssignedValue == false)))
            {
                this.SendPropertyChanging();
                if ((previousValue != null))
                {
                    this._StudentGroup.Entity = null;
                    previousValue.Audios.Remove(this);
                }
                this._StudentGroup.Entity = value;
                if ((value != null))
                {
                    value.Audios.Add(this);
                    this._GroupID = value.GroupID;
                }
                else
                {
                    this._GroupID = default(Nullable<int>);
                }
                this.SendPropertyChanged("StudentGroup");
            }
        }
    }
    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.websites")]
public partial class Websites : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _WebID;

    private string _Title;

    private string _Description;

    private System.DateTime _DatePosted;

    private string _Username;

    private long _Size;

    private int _Views;

    private System.Nullable<System.DateTime> _LastView;

    private System.Nullable<System.DateTime> _AutoDeleteDate;

    private string _Author;

    private System.Nullable<int> _GroupID;

    private bool _ShowStatus;





    private EntityRef<StudentGroup> _StudentGroup;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebIDChanging(string value);
    partial void OnWebIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    partial void OnThumbnailBytesChanging(System.Data.Linq.Binary value);
    partial void OnThumbnailBytesChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSizeChanging(long value);
    partial void OnSizeChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnLastViewChanging(System.Nullable<System.DateTime> value);
    partial void OnLastViewChanged();
    partial void OnAutoDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAutoDeleteDateChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();

    partial void OnShowStatusChanging(bool value);
    partial void OnShowStatusChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();

    #endregion

    public Websites()
    {
        this._StudentGroup = default(EntityRef<StudentGroup>);
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WebID", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string WebID
    {
        get
        {
            return this._WebID;
        }
        set
        {
            if ((this._WebID != value))
            {
                this.OnWebIDChanging(value);
                this.SendPropertyChanging();
                this._WebID = value;
                this.SendPropertyChanged("WebID");
                this.OnWebIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string Title
    {
        get
        {
            return this._Title;
        }
        set
        {
            if ((this._Title != value))
            {
                this.OnTitleChanging(value);
                this.SendPropertyChanging();
                this._Title = value;
                this.SendPropertyChanged("Title");
                this.OnTitleChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(1000) NOT NULL", CanBeNull = false)]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DatePosted", DbType = "DateTime NOT NULL")]
    public System.DateTime DatePosted
    {
        get
        {
            return this._DatePosted;
        }
        set
        {
            if ((this._DatePosted != value))
            {
                this.OnDatePostedChanging(value);
                this.SendPropertyChanging();
                this._DatePosted = value;
                this.SendPropertyChanged("DatePosted");
                this.OnDatePostedChanged();
            }
        }
    }



    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Size", DbType = "BigInt NOT NULL")]
    public long Size
    {
        get
        {
            return this._Size;
        }
        set
        {
            if ((this._Size != value))
            {
                this.OnSizeChanging(value);
                this.SendPropertyChanging();
                this._Size = value;
                this.SendPropertyChanged("Size");
                this.OnSizeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Views", DbType = "Int NOT NULL")]
    public int Views
    {
        get
        {
            return this._Views;
        }
        set
        {
            if ((this._Views != value))
            {
                this.OnViewsChanging(value);
                this.SendPropertyChanging();
                this._Views = value;
                this.SendPropertyChanged("Views");
                this.OnViewsChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastView", DbType = "DateTime")]
    public System.Nullable<System.DateTime> LastView
    {
        get
        {
            return this._LastView;
        }
        set
        {
            if ((this._LastView != value))
            {
                this.OnLastViewChanging(value);
                this.SendPropertyChanging();
                this._LastView = value;
                this.SendPropertyChanged("LastView");
                this.OnLastViewChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoDeleteDate", DbType = "DateTime")]
    public System.Nullable<System.DateTime> AutoDeleteDate
    {
        get
        {
            return this._AutoDeleteDate;
        }
        set
        {
            if ((this._AutoDeleteDate != value))
            {
                this.OnAutoDeleteDateChanging(value);
                this.SendPropertyChanging();
                this._AutoDeleteDate = value;
                this.SendPropertyChanged("AutoDeleteDate");
                this.OnAutoDeleteDateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Author", DbType = "VarChar(100)")]
    public string Author
    {
        get
        {
            return this._Author;
        }
        set
        {
            if ((this._Author != value))
            {
                this.OnAuthorChanging(value);
                this.SendPropertyChanging();
                this._Author = value;
                this.SendPropertyChanged("Author");
                this.OnAuthorChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupID", DbType = "Int")]
    public System.Nullable<int> GroupID
    {
        get
        {
            return this._GroupID;
        }
        set
        {
            if ((this._GroupID != value))
            {
                if (this._StudentGroup.HasLoadedOrAssignedValue)
                {
                    throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                }
                this.OnGroupIDChanging(value);
                this.SendPropertyChanging();
                this._GroupID = value;
                this.SendPropertyChanged("GroupID");
                this.OnGroupIDChanged();
            }
        }
    }



    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowStatus")]
    public bool ShowStatus
    {
        get
        {
            return this._ShowStatus;
        }
        set
        {
            if ((this._ShowStatus != value))
            {
                this.OnShowStatusChanging(value);
                this.SendPropertyChanging();
                this._ShowStatus = value;
                this.SendPropertyChanged("ShowStatus");
                this.OnShowStatusChanged();
            }
        }
    }


    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Websites", Storage = "_StudentGroup", ThisKey = "GroupID", OtherKey = "GroupID", IsForeignKey = true, DeleteRule = "SET NULL")]
    public StudentGroup StudentGroup
    {
        get
        {
            return this._StudentGroup.Entity;
        }
        set
        {
            StudentGroup previousValue = this._StudentGroup.Entity;
            if (((previousValue != value)
                        || (this._StudentGroup.HasLoadedOrAssignedValue == false)))
            {
                this.SendPropertyChanging();
                if ((previousValue != null))
                {
                    this._StudentGroup.Entity = null;
                    previousValue.Websites.Remove(this);
                }
                this._StudentGroup.Entity = value;
                if ((value != null))
                {
                    value.Websites.Add(this);
                    this._GroupID = value.GroupID;
                }
                else
                {
                    this._GroupID = default(Nullable<int>);
                }
                this.SendPropertyChanged("StudentGroup");
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.files")]
public partial class Files : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _FileID;

    private string _Title;

    private string _Description;

    private System.DateTime _DatePosted;

    private string _Username;

    private long _Size;

    private int _Views;

    private System.Nullable<System.DateTime> _LastView;

    private System.Nullable<System.DateTime> _AutoDeleteDate;

    private string _Author;

    private System.Nullable<int> _GroupID;

    private bool _ShowStatus;

    private EntityRef<StudentGroup> _StudentGroup;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(string value);
    partial void OnFileIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    partial void OnThumbnailBytesChanging(System.Data.Linq.Binary value);
    partial void OnThumbnailBytesChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSizeChanging(long value);
    partial void OnSizeChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnLastViewChanging(System.Nullable<System.DateTime> value);
    partial void OnLastViewChanged();
    partial void OnAutoDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAutoDeleteDateChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();

    partial void OnShowStatusChanging(bool value);
    partial void OnShowStatusChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();

    #endregion

    public Files()
    {
        this._StudentGroup = default(EntityRef<StudentGroup>);
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FileID", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string FileID
    {
        get
        {
            return this._FileID;
        }
        set
        {
            if ((this._FileID != value))
            {
                this.OnFileIDChanging(value);
                this.SendPropertyChanging();
                this._FileID = value;
                this.SendPropertyChanged("FileID");
                this.OnFileIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string Title
    {
        get
        {
            return this._Title;
        }
        set
        {
            if ((this._Title != value))
            {
                this.OnTitleChanging(value);
                this.SendPropertyChanging();
                this._Title = value;
                this.SendPropertyChanged("Title");
                this.OnTitleChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(1000) NOT NULL", CanBeNull = false)]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DatePosted", DbType = "DateTime NOT NULL")]
    public System.DateTime DatePosted
    {
        get
        {
            return this._DatePosted;
        }
        set
        {
            if ((this._DatePosted != value))
            {
                this.OnDatePostedChanging(value);
                this.SendPropertyChanging();
                this._DatePosted = value;
                this.SendPropertyChanged("DatePosted");
                this.OnDatePostedChanged();
            }
        }
    }



    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Size", DbType = "BigInt NOT NULL")]
    public long Size
    {
        get
        {
            return this._Size;
        }
        set
        {
            if ((this._Size != value))
            {
                this.OnSizeChanging(value);
                this.SendPropertyChanging();
                this._Size = value;
                this.SendPropertyChanged("Size");
                this.OnSizeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Views", DbType = "Int NOT NULL")]
    public int Views
    {
        get
        {
            return this._Views;
        }
        set
        {
            if ((this._Views != value))
            {
                this.OnViewsChanging(value);
                this.SendPropertyChanging();
                this._Views = value;
                this.SendPropertyChanged("Views");
                this.OnViewsChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastView", DbType = "DateTime")]
    public System.Nullable<System.DateTime> LastView
    {
        get
        {
            return this._LastView;
        }
        set
        {
            if ((this._LastView != value))
            {
                this.OnLastViewChanging(value);
                this.SendPropertyChanging();
                this._LastView = value;
                this.SendPropertyChanged("LastView");
                this.OnLastViewChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoDeleteDate", DbType = "DateTime")]
    public System.Nullable<System.DateTime> AutoDeleteDate
    {
        get
        {
            return this._AutoDeleteDate;
        }
        set
        {
            if ((this._AutoDeleteDate != value))
            {
                this.OnAutoDeleteDateChanging(value);
                this.SendPropertyChanging();
                this._AutoDeleteDate = value;
                this.SendPropertyChanged("AutoDeleteDate");
                this.OnAutoDeleteDateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Author", DbType = "VarChar(100)")]
    public string Author
    {
        get
        {
            return this._Author;
        }
        set
        {
            if ((this._Author != value))
            {
                this.OnAuthorChanging(value);
                this.SendPropertyChanging();
                this._Author = value;
                this.SendPropertyChanged("Author");
                this.OnAuthorChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupID", DbType = "Int")]
    public System.Nullable<int> GroupID
    {
        get
        {
            return this._GroupID;
        }
        set
        {
            if ((this._GroupID != value))
            {
                if (this._StudentGroup.HasLoadedOrAssignedValue)
                {
                    throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                }
                this.OnGroupIDChanging(value);
                this.SendPropertyChanging();
                this._GroupID = value;
                this.SendPropertyChanged("GroupID");
                this.OnGroupIDChanged();
            }
        }
    }



    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowStatus")]
    public bool ShowStatus
    {
        get
        {
            return this._ShowStatus;
        }
        set
        {
            if ((this._ShowStatus != value))
            {
                this.OnShowStatusChanging(value);
                this.SendPropertyChanging();
                this._ShowStatus = value;
                this.SendPropertyChanged("ShowStatus");
                this.OnShowStatusChanged();
            }
        }
    }


    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Files", Storage = "_StudentGroup", ThisKey = "GroupID", OtherKey = "GroupID", IsForeignKey = true, DeleteRule = "SET NULL")]
    public StudentGroup StudentGroup
    {
        get
        {
            return this._StudentGroup.Entity;
        }
        set
        {
            StudentGroup previousValue = this._StudentGroup.Entity;
            if (((previousValue != value)
                        || (this._StudentGroup.HasLoadedOrAssignedValue == false)))
            {
                this.SendPropertyChanging();
                if ((previousValue != null))
                {
                    this._StudentGroup.Entity = null;
                    previousValue.Files.Remove(this);
                }
                this._StudentGroup.Entity = value;
                if ((value != null))
                {
                    value.Files.Add(this);
                    this._GroupID = value.GroupID;
                }
                else
                {
                    this._GroupID = default(Nullable<int>);
                }
                this.SendPropertyChanged("StudentGroup");
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
#pragma warning restore 1591
[Table(Name = "nwcloud.images")]
public partial class Images : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _ImageID;

    private string _Title;

    private string _Description;

    private System.DateTime _DatePosted;

    private string _Username;

    private long _Size;

    private int _Views;

    private System.Nullable<System.DateTime> _LastView;

    private System.Nullable<System.DateTime> _AutoDeleteDate;

    private string _Author;

    private System.Nullable<int> _GroupID;

    private bool _ShowStatus;





    private EntityRef<StudentGroup> _StudentGroup;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(string value);
    partial void OnImageIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    partial void OnThumbnailBytesChanging(System.Data.Linq.Binary value);
    partial void OnThumbnailBytesChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSizeChanging(long value);
    partial void OnSizeChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnLastViewChanging(System.Nullable<System.DateTime> value);
    partial void OnLastViewChanged();
    partial void OnAutoDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAutoDeleteDateChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();

    partial void OnShowStatusChanging(bool value);
    partial void OnShowStatusChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();

    #endregion

    public Images()
    {
        this._StudentGroup = default(EntityRef<StudentGroup>);
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImageID", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string ImageID
    {
        get
        {
            return this._ImageID;
        }
        set
        {
            if ((this._ImageID != value))
            {
                this.OnImageIDChanging(value);
                this.SendPropertyChanging();
                this._ImageID = value;
                this.SendPropertyChanged("ImageID");
                this.OnImageIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
    public string Title
    {
        get
        {
            return this._Title;
        }
        set
        {
            if ((this._Title != value))
            {
                this.OnTitleChanging(value);
                this.SendPropertyChanging();
                this._Title = value;
                this.SendPropertyChanged("Title");
                this.OnTitleChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(1000) NOT NULL", CanBeNull = false)]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DatePosted", DbType = "DateTime NOT NULL")]
    public System.DateTime DatePosted
    {
        get
        {
            return this._DatePosted;
        }
        set
        {
            if ((this._DatePosted != value))
            {
                this.OnDatePostedChanging(value);
                this.SendPropertyChanging();
                this._DatePosted = value;
                this.SendPropertyChanged("DatePosted");
                this.OnDatePostedChanged();
            }
        }
    }



    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Size", DbType = "BigInt NOT NULL")]
    public long Size
    {
        get
        {
            return this._Size;
        }
        set
        {
            if ((this._Size != value))
            {
                this.OnSizeChanging(value);
                this.SendPropertyChanging();
                this._Size = value;
                this.SendPropertyChanged("Size");
                this.OnSizeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Views", DbType = "Int NOT NULL")]
    public int Views
    {
        get
        {
            return this._Views;
        }
        set
        {
            if ((this._Views != value))
            {
                this.OnViewsChanging(value);
                this.SendPropertyChanging();
                this._Views = value;
                this.SendPropertyChanged("Views");
                this.OnViewsChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastView", DbType = "DateTime")]
    public System.Nullable<System.DateTime> LastView
    {
        get
        {
            return this._LastView;
        }
        set
        {
            if ((this._LastView != value))
            {
                this.OnLastViewChanging(value);
                this.SendPropertyChanging();
                this._LastView = value;
                this.SendPropertyChanged("LastView");
                this.OnLastViewChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoDeleteDate", DbType = "DateTime")]
    public System.Nullable<System.DateTime> AutoDeleteDate
    {
        get
        {
            return this._AutoDeleteDate;
        }
        set
        {
            if ((this._AutoDeleteDate != value))
            {
                this.OnAutoDeleteDateChanging(value);
                this.SendPropertyChanging();
                this._AutoDeleteDate = value;
                this.SendPropertyChanged("AutoDeleteDate");
                this.OnAutoDeleteDateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Author", DbType = "VarChar(100)")]
    public string Author
    {
        get
        {
            return this._Author;
        }
        set
        {
            if ((this._Author != value))
            {
                this.OnAuthorChanging(value);
                this.SendPropertyChanging();
                this._Author = value;
                this.SendPropertyChanged("Author");
                this.OnAuthorChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GroupID", DbType = "Int")]
    public System.Nullable<int> GroupID
    {
        get
        {
            return this._GroupID;
        }
        set
        {
            if ((this._GroupID != value))
            {
                if (this._StudentGroup.HasLoadedOrAssignedValue)
                {
                    throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                }
                this.OnGroupIDChanging(value);
                this.SendPropertyChanging();
                this._GroupID = value;
                this.SendPropertyChanged("GroupID");
                this.OnGroupIDChanged();
            }
        }
    }



    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowStatus")]
    public bool ShowStatus
    {
        get
        {
            return this._ShowStatus;
        }
        set
        {
            if ((this._ShowStatus != value))
            {
                this.OnShowStatusChanging(value);
                this.SendPropertyChanging();
                this._ShowStatus = value;
                this.SendPropertyChanged("ShowStatus");
                this.OnShowStatusChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "StudentGroup_Images", Storage = "_StudentGroup", ThisKey = "GroupID", OtherKey = "GroupID", IsForeignKey = true, DeleteRule = "SET NULL")]
    public StudentGroup StudentGroup
    {
        get
        {
            return this._StudentGroup.Entity;
        }
        set
        {
            StudentGroup previousValue = this._StudentGroup.Entity;
            if (((previousValue != value)
                        || (this._StudentGroup.HasLoadedOrAssignedValue == false)))
            {
                this.SendPropertyChanging();
                if ((previousValue != null))
                {
                    this._StudentGroup.Entity = null;
                    previousValue.Images.Remove(this);
                }
                this._StudentGroup.Entity = value;
                if ((value != null))
                {
                    value.Images.Add(this);
                    this._GroupID = value.GroupID;
                }
                else
                {
                    this._GroupID = default(Nullable<int>);
                }
                this.SendPropertyChanged("StudentGroup");
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "nwcloud.useragreement")]
public partial class UserAgreement : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _Username;
    private System.DateTime _SignedDate;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSignedDatechanging(System.DateTime value);
    partial void OnSignedDateChanged();
    #endregion

    public UserAgreement()
    {
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string Username
    {
        get
        {
            return this._Username;
        }
        set
        {
            if ((this._Username != value))
            {
                this.OnUsernameChanging(value);
                this.SendPropertyChanging();
                this._Username = value;
                this.SendPropertyChanged("Username");
                this.OnUsernameChanged();
            }
        }
    }
    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SignedDate", DbType = "DateTime NOT NULL")]
    public System.DateTime SignedDate
    {
        get
        {
            return this._SignedDate;
        }
        set
        {
            if ((this._SignedDate != value))
            {
                this.OnSignedDatechanging(value);
                this.SendPropertyChanging();
                this._SignedDate = value;
                this.SendPropertyChanged("DatePosted");
                this.OnSignedDateChanged();
            }
        }
    }
    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
#pragma warning restore 1591